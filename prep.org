#+title: prepping and loading data for mysql
* preview first line of file
#+begin_src shell
head -1 filename
#+end_src
* formatting 'NA' as '\N' because mysql is picky
#+begin_src shell
tr 'NA' '\\N' < state.csv > stateFormatted.csv
#+end_src

NOTE -> this messes up a lot of the data values (i.e., TN, Anderson County becomes T,nderson)

new plan: load table into pandas, df.fillna('\\N'), export to csv

#+begin_src sql
update stateStops set search_rate = if 
#+end_src

* stateStops table schema
#+begin_src sql
create table stateStops (state varchar(20) not null,
                         city varchar(255) not null,
                         geography varchar(255) not null,
                         subgeography varchar(255) not null,
                         subject_race varchar(20) not null,
                         search_rate double check ,
                         stop_rate double,
                         hit_rate double,
                         inferred_threshold double,
                         stops_per_year double,
                         stop_rate_n double);
#+end_src

#+begin_src sql
create table stateStops (state varchar(20) not null, city varchar(255 not null), geography varchar(255) not null, subgeography varchar(255) not null, subject_race varchar(20) not null, search_rate double, stop_rate double, hit_rate double, inferred_threshold double, stops_per_year double, stop_rate_n double);
#+end_src
* cityStops table schema
#+begin_src sql
create table cityStops (city varchar(255),
                        state varchar(20),
                        geography varchar(255),
                        subgeography varchar(255),
                        subject_race varchar(20),
                        search_rate double,
                        stop_rate double,
                        hit_rate double,
                        inferred_threshold double,
                        stops_per_year double,
                        stop_rate_n double);
#+end_src

#+begin_src sql
create table cityStops (city varchar(255), state varchar(20), geography varchar(255), subgeography varchar(255), subject_race varchar(20), search_rate double, stop_rate double, hit_rate double, inferred_threshold double, stops_per_year double, stop_rate_n double);
#+end_src
* marijuanaSearches schema
#+begin_src sql
create table cityStops (state varchar(20),
                        driver_race varchar(20),
                        pre_legalization boolean,
                        quarter double,
                        search_rate double);
#+end_src

#+begin_src sql
create table marijuanaSearches (state varchar(20), driver_race varchar(20), pre_legalization boolean, quarter double, search_rate double);
#+end_src
* loading local data into table
#+begin_src sql
load data local infile '~/Projects/BerkeleyDataEng/state.csv' into table stateStops fields terminated by ',' lines terminated by '\n' ignore 1 rows (state,city,geography,subgeography,subject_race,search_rate,stop_rate,hit_rate,inferred_threshold,stops_per_year,stop_rate_n);
#+end_src

#+begin_src sql
load data local infile '~/Projects/BerkeleyDataEng/cityStopsFormatted.csv' into table cityStops fields terminated by ',' lines terminated by '\n' ignore 1 rows (city,state,geography,subgeography,subject_race,search_rate,stop_rate,hit_rate,inferred_threshold,stops_per_year,stop_rate_n);
#+end_src

#+begin_src sql
load data local infile '~/Projects/BerkeleyDataEng/marijuanaSearchesFormatted.csv' into table marijuanaSearches fields terminated by ',' lines terminated by '\n' ignore 1 rows (state, driver_race, pre_legalization, quarter, search_rate);
#+end_src
